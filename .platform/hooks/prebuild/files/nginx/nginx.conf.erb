<% require 'json'
instance_data = JSON.parse(File.read('/run/cloud-init/instance-data.json'))
vpc_cidr = instance_data.dig('ds', 'meta-data', 'network', 'interfaces', 'macs').values.dig(0, 'vpc-ipv4-cidr-block')
%># Elastic Beanstalk Nginx Configuration File

user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    131437;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    include       conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
    }

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    server {
        listen        80 default_server;
        access_log    /var/log/nginx/access.log main;

        # Only allow access from the private network
        allow <%= vpc_cidr %>;
        deny all;

        # Include the Elastic Beanstalk generated locations
        include conf.d/elasticbeanstalk/*.conf;
    }
}
